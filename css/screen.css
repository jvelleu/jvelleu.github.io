@import '../node_modules/modern-normalize/modern-normalize.css';
:root {
  --background-color: #fff;
  --text-color: #000;
  --link-color: #5d24f5;
  --blend-mode: screen;
  --weight-correct: 35;
  --radius: calc(clamp(10px, 1em, 30px) * 2);
}

[theme=dark] {
  --background-color: #000;
  --text-color: #fff;
  --link-color: #f1f227;
  --blend-mode: multiply;
  --weight-correct: 0;
}

[cursor=custom] * {
  cursor: none;
}

:root {
  line-height: 1.5;
  font-size: 62.5%;
}

h1, h2, h3, h4, h5, figure, p, ol, ul {
  margin: 0;
}

ol[role=list], ul[role=list] {
  list-style: none;
  padding-inline: 0;
}

h1, h2, h3, h4, h5 {
  font-size: inherit;
  font-weight: inherit;
}

img {
  display: block;
  max-inline-size: 100%;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  transition: background-color 0.4s ease, color 0.4s ease;
}

a {
  color: var(--link-color);
  transition: color 0.4s ease;
}

a:hover {
  color: var(--text-color);
}

.main-nav {
  color: var(--text-color);
  transition: color 0.4s ease;
}

::-moz-selection {
  color: var(--background-color);
  background-color: var(--link-color);
}

::selection {
  color: var(--background-color);
  background-color: var(--link-color);
}

/*
@mixin base-type {
    font-family: $primary-font;
    font-size: $base-font-size;
}
*/
h1 {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct));
  transition: font-variation-settings 0.2s ease;
}

h2, h3, h4, h5, h6 {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: -1rem;
  font-variation-settings: "wght" calc(525 + var(--weight-correct));
  transition: font-variation-settings 0.2s ease;
}

p {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct));
  transition: font-variation-settings 0.2s ease;
}

.left {
  text-align: left;
}

.right {
  text-align: right;
}

.main-nav {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct) + 100);
  transition: font-variation-settings 0.2s ease;
  text-decoration: none;
  padding: clamp(10px, 1em, 30px);
  transition: font-variation-settings 0.2s ease;
}

.main-nav:hover {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct) + 250);
  transition: font-variation-settings 0.2s ease;
}

.scroll-text {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct));
  transition: font-variation-settings 0.2s ease;
  transition: transform 0.3s ease;
}

.column-text {
  font-family: cofo-sans-variable, Arial, sans-serif;
  font-size: 2rem;
  font-variation-settings: "wght" calc(350 + var(--weight-correct));
  transition: font-variation-settings 0.2s ease;
}

.column-text li {
  transition: opacity 0.3s ease;
}

#logo {
  text-transform: uppercase;
}

#cursor {
  position: fixed;
  width: calc(clamp(10px, 1em, 30px) * 2);
  height: calc(clamp(10px, 1em, 30px) * 2);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  transition: width 0.2s, height 0.2s;
  background-color: #fff;
  mix-blend-mode: difference;
  z-index: 9998;
}

#cursor-bg {
  position: fixed;
  width: calc(clamp(10px, 1em, 30px) * 2);
  height: calc(clamp(10px, 1em, 30px) * 2);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  transition: width 0.2s, height 0.2s;
  background-color: 0, 0, 0, 0;
  mix-blend-mode: var(--blend-mode);
  z-index: 9999;
}

.animate-container {
  display: flex;
  align-items: baseline; /* Align to baseline */
  text-align: left;
  margin: 10px;
  width: -moz-max-content;
  width: max-content;
}

.column {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  margin: 0;
  height: auto;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  overflow: hidden;
}

.space {
  margin-left: 0.5rem; /* Space between text elements */
}

.toggle-container {
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  overflow: hidden;
  height: 3rem;
  width: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.toggle-text {
  position: absolute;
  width: 100%;
  transition: transform 0.4s ease, opacity 0.4s ease;
}

.toggle-text.light {
  opacity: 0;
}

.toggle-text.dark {
  opacity: 0;
}

[theme=light] .toggle-text.light {
  opacity: 1;
}

[theme=dark] .toggle-text.dark {
  opacity: 1;
}

#nav-block {
  grid-area: nav;
}

#logo-block {
  grid-area: logo;
  height: 12rem;
  align-items: center;
}

#left-bar {
  grid-area: left-bar;
}

#right-bar {
  grid-area: right-bar;
}

#intro {
  grid-area: intro;
}

#case-list {
  grid-area: case-list;
}

#home {
  display: grid;
  grid-template-columns: clamp(240px, 22rem, 360px) 1fr clamp(240px, 22rem, 360px);
  grid-template-areas: "nav . logo" "nav intro intro" "nav case-list right-bar";
  padding: 0;
  margin: 0;
}

/*
@media (min-width: $breakpoint) {
    body{

    }
}
*/
/* EXAMPLE USE
$breakpoints: (
  phone-sm: 420px,
  phone: 767px,
  tablet: 768px,
  tablet-lg: 1024px,
  desktop: 1025px,
  desktop-lg: 1600px
  );

@mixin for-size($breakpoint, $direction:down) {

// If the breakpoint exists in the map.
@if map-has-key($breakpoints, $breakpoint) {

// Get the breakpoint value.
$breakpoint-value: map-get($breakpoints, $breakpoint);

// Determine the direction and then write the media query.
@if $direction == up {
  @media (min-width: $breakpoint-value) {
    @content;
  }
}
@else if $direction == down {
  @media (max-width: $breakpoint-value) {
    @content;
     }
  }
}
// If the breakpoint doesn't exist in the map, pass a manual breakpoint
@else {
  @if $direction == up {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
  @else if $direction == down {
    @media (max-width: $breakpoint) {
      @content;
      }
    }
  }
}


.my-element {
  @include for-size(1365px,up) {
    padding-right:0;
  }
}
*/
/* COLOR */
/*
:root {
    background-color: $primary-color;
}
*/
/*
@include color-mode($themes) {
    * {
        color: themed("text");
        background-color: themed("background");
    }
}
*//*# sourceMappingURL=screen.css.map */