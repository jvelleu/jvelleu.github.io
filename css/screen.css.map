{"version":3,"sources":["../scss/partials/_reset.scss","screen.css","../scss/partials/_color.scss","../scss/partials/_type.scss","../scss/partials/_variables.scss","../scss/partials/_layout.scss","../scss/screen.scss"],"names":[],"mappings":"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","file":"screen.css","sourcesContent":["@import '../node_modules/modern-normalize/modern-normalize.css';\n// https://github.com/sindresorhus/modern-normalize\n// https://mattbrictson.com/blog/css-normalize-and-reset\n\n:root {\n  line-height: 1.5;\n  font-size: 62.5%; //scale default root font size to 10px\n}\n\nh1, h2, h3, h4, h5, figure, p, ol, ul {\n  margin: 0;\n}\n\nol[role=\"list\"], ul[role=\"list\"] {\n  list-style: none;\n  padding-inline: 0;\n}\n\nh1, h2, h3, h4, h5 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nimg {\n  display: block;\n  max-inline-size: 100%;\n}","@import '../node_modules/modern-normalize/modern-normalize.css';\n:root {\n  line-height: 1.5;\n  font-size: 62.5%;\n}\n\nh1, h2, h3, h4, h5, figure, p, ol, ul {\n  margin: 0;\n}\n\nol[role=list], ul[role=list] {\n  list-style: none;\n  padding-inline: 0;\n}\n\nh1, h2, h3, h4, h5 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nimg {\n  display: block;\n  max-inline-size: 100%;\n}\n\n:root {\n  --background-color: #fff;\n  --text-color: #000;\n  --link-color: #5d24f5;\n  --blend-mode: screen;\n}\n\n[theme=dark] {\n  --background-color: #000;\n  --text-color: #fff;\n  --link-color: #f1f227;\n  --blend-mode: multiply;\n}\n\nbody {\n  background-color: var(--background-color);\n  color: var(--text-color);\n  transition: background-color 0.4s ease, color 0.4s ease;\n}\n\na {\n  color: var(--link-color);\n  transition: color 0.4s ease;\n}\n\na:hover {\n  color: var(--text-color);\n}\n\n.main-nav {\n  color: var(--text-color);\n  transition: color 0.4s ease;\n}\n\n::selection {\n  color: var(--background-color);\n  background-color: var(--link-color);\n}\n\nh1 {\n  font-family: cofo-sans-variable, Arial, sans-serif;\n  font-size: 2rem;\n  font-variation-settings: \"wght\" 450;\n  text-decoration: none;\n}\n\nh2, h3, h4, h5, h6 {\n  font-family: cofo-sans-variable, Arial, sans-serif;\n  font-size: 3rem;\n  font-variation-settings: \"wght\" 233.3333333333;\n}\n\np {\n  font-family: cofo-sans-variable, Arial, sans-serif;\n  font-size: 2rem;\n  font-variation-settings: \"wght\" 350;\n  transition: font-variation-settings 0.2s ease;\n}\n\n.main-nav {\n  font-family: cofo-sans-variable, Arial, sans-serif;\n  font-size: 2rem;\n  font-variation-settings: \"wght\" 450;\n  text-decoration: none;\n  padding: min(1em, 10px);\n  transition: font-variation-settings 0.2s ease;\n}\n\n.main-nav:hover {\n  font-variation-settings: \"wght\" 600;\n}\n\n.left {\n  text-align: left;\n}\n\n.right {\n  text-align: right;\n}\n\n#logo {\n  text-transform: uppercase;\n}\n\n/* CURSOR */\n:root * {\n  cursor: none;\n}\n\n#cursor {\n  position: fixed;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n  transition: width 0.2s, height 0.2s;\n  background-color: #fff;\n  mix-blend-mode: difference;\n  z-index: 9998;\n}\n\n#cursor-bg {\n  position: fixed;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n  transition: width 0.2s, height 0.2s;\n  background-color: 0, 0, 0, 0;\n  mix-blend-mode: var(--blend-mode);\n  z-index: 9999;\n}\n\n.container {\n  display: flex;\n  align-items: baseline; /* Align to baseline */\n  text-align: left;\n  margin: 2rem;\n}\n\n.column {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  overflow: hidden;\n  width: max-content;\n}\n\n.scroll-text {\n  font-size: 2rem;\n  font-weight: bold;\n  transition: transform 0.3s ease;\n  width: max-content;\n}\n\n.column-text {\n  font-size: 2rem;\n  text-align: left;\n  list-style-type: none;\n}\n\n.column-text li {\n  transition: opacity 0.3s ease;\n}\n\n.space {\n  margin-left: 0.5rem; /* Space between text elements */\n}\n\n.toggle-container {\n  position: relative;\n  user-select: none;\n  overflow: hidden;\n  height: 3rem;\n  width: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.toggle-text {\n  position: absolute;\n  width: 100%;\n  transition: transform 0.4s ease, opacity 0.4s ease;\n}\n\n.toggle-text.light {\n  transform: translateY(-100%);\n  opacity: 0;\n}\n\n.toggle-text.dark {\n  transform: translateY(100%);\n  opacity: 0;\n}\n\n[theme=light] .toggle-text.light {\n  transform: translateY(0);\n  opacity: 1;\n}\n\n[theme=dark] .toggle-text.dark {\n  transform: translateY(0);\n  opacity: 1;\n}\n\n#nav-block {\n  grid-area: nav;\n}\n\n#logo-block {\n  grid-area: logo;\n  height: 12rem;\n  align-items: center;\n}\n\n#left-bar {\n  grid-area: left-bar;\n}\n\n#right-bar {\n  grid-area: right-bar;\n}\n\n#intro {\n  grid-area: intro;\n}\n\n#case-list {\n  grid-area: case-list;\n}\n\n#home {\n  display: grid;\n  grid-template-columns: clamp(240px, 22rem, 360px) 1fr clamp(240px, 22rem, 360px);\n  grid-template-areas: \"nav . logo\" \"nav intro .\" \"nav case-list right-bar\";\n  padding: 0;\n  margin: 0;\n}\n\n/*\n@media (min-width: $breakpoint) {\n    body{\n\n    }\n}\n*/\n/* EXAMPLE USE\n$breakpoints: (\n  phone-sm: 420px,\n  phone: 767px,\n  tablet: 768px,\n  tablet-lg: 1024px,\n  desktop: 1025px,\n  desktop-lg: 1600px\n  );\n\n@mixin for-size($breakpoint, $direction:down) {\n\n// If the breakpoint exists in the map.\n@if map-has-key($breakpoints, $breakpoint) {\n\n// Get the breakpoint value.\n$breakpoint-value: map-get($breakpoints, $breakpoint);\n\n// Determine the direction and then write the media query.\n@if $direction == up {\n  @media (min-width: $breakpoint-value) {\n    @content;\n  }\n}\n@else if $direction == down {\n  @media (max-width: $breakpoint-value) {\n    @content;\n     }\n  }\n}\n// If the breakpoint doesn't exist in the map, pass a manual breakpoint\n@else {\n  @if $direction == up {\n    @media (min-width: $breakpoint) {\n      @content;\n    }\n  }\n  @else if $direction == down {\n    @media (max-width: $breakpoint) {\n      @content;\n      }\n    }\n  }\n}\n\n\n.my-element {\n  @include for-size(1365px,up) {\n    padding-right:0;\n  }\n}\n*/\n/* COLOR */\n/*\n:root {\n    background-color: $primary-color;\n}\n*/\n/*\n@include color-mode($themes) {\n    * {\n        color: themed(\"text\");\n        background-color: themed(\"background\");\n    }\n}\n*/","@use \"_variables\" as *;\n\n:root {\n    --background-color: #{$secondary_color};\n    --text-color: #{$primary_color};\n    --link-color: #{$dark-accent-color};\n    --blend-mode: #{$dark-blend-mode};\n}\n  \n[theme=\"dark\"] {\n    --background-color: #{$primary_color};\n    --text-color: #{$secondary-color};\n    --link-color: #{$light-accent-color};\n    --blend-mode: #{$light-blend-mode};\n}\n\nbody { // Baseline text & background color\n    background-color: var(--background-color);\n    color: var(--text-color);\n    transition: background-color $slow-transition, color $slow-transition;\n}\n\na {\n    color: var(--link-color);\n    transition: color $slow-transition;\n}\n\na:hover {\n    color: var(--text-color);\n}\n\n.main-nav {\n    color: var(--text-color);\n    transition: color $slow-transition;\n}\n\n::selection { \n    color: var(--background-color);\n    background-color: var(--link-color);\n}","@use \"_variables\" as *;\n\n@mixin base-type {\n    font-family: $primary-font;\n    font-size: $base-font-size;\n}\n\nh1 {\n    @include base-type;\n    font-variation-settings: \"wght\" calc($base-font-weight + 100);\n    text-decoration: none;\n}\n\nh2, h3, h4, h5, h6 {\n    font-family: $primary-font;\n    font-size: calc($base-font-size * $scale-factor);\n    font-variation-settings: \"wght\" calc($base-font-weight / $scale-factor);\n}\n\np {\n    @include base-type;\n    font-variation-settings: \"wght\" $base-font-weight;\n    transition: font-variation-settings $fast-transition;\n}\n\n.main-nav {\n    @include base-type;\n    font-variation-settings: \"wght\" calc($base-font-weight + 100);\n    text-decoration: none;\n    padding: $base-pad;\n    transition: font-variation-settings $fast-transition;\n}\n\n.main-nav:hover {\n    font-variation-settings: \"wght\" calc($base-font-weight + 250);\n}\n\n\n.left {\n    text-align: left;\n}\n\n.right {\n    text-align: right;\n}\n\n#logo {\n    text-transform: uppercase;\n}","// Colors\n$primary-color: #000;\n$secondary_color: #fff;\n$light-accent-color: #f1f227;\n$dark-accent-color: #5d24f5;\n$light-blend-mode: multiply;\n$dark-blend-mode: screen;\n\n// Typography\n$primary-font: cofo-sans-variable, Arial, sans-serif;\n$secondary-font: cofo-sans-mono-variable, Arial, sans-serif;\n$base-font-size: 2rem;\n$base-font-weight: 350;\n$scale-factor: 1.5;\n\n// Layout\n$base-pad: min(1em, 10px);\n$bar-width: clamp(240px, 22rem, 360px);\n\n$header-height: 12rem;\n$breakpoint: min(640px, 64rem); //max?\n\n//Utilities\n$fast-transition: 0.2s ease;\n$slow-transition: 0.4s ease;","@use \"_variables\" as *;\n\n\n\n/* CURSOR */\n:root * {\n    cursor: none; //Hide default cursor\n}\n\n@mixin base-cursor {\n    position: fixed; // Follow cursor\n    width: 0; // Inititalize at 0;\n    height: 0; // Inititalize at 0;\n    border-radius: 50%;\n    transform: translate(-50%, -50%); // Center the circle\n    pointer-events: none;\n    transition: width 0.2s, height 0.2s;\n}\n\n#cursor {\n    @include base-cursor;\n    background-color: #fff;\n    mix-blend-mode: difference; // Invert content beneath\n    z-index: 9998; // Ensure it stays above all other content\n}\n\n#cursor-bg {\n    @include base-cursor;\n    background-color: (0,0,0,0); // Initialize as transparent\n    mix-blend-mode: var(--blend-mode); // Blend mode for tint\n    z-index: 9999; // Layered above the main cursor for tint\n}\n\n//INTRO\nbody {\n\n}\n\n.container {\n  display: flex;\n  align-items: baseline; /* Align to baseline */\n  text-align: left;\n  margin: 2rem;\n}\n\n.column {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  //gap: 1rem;\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  //font-family: Arial, sans-serif;\n  //background: #f5f5f5;\n  overflow: hidden;\n  width: max-content;\n}\n\n.scroll-text {\n  font-size: 2rem;\n  font-weight: bold;\n  transition: transform 0.3s ease;\n  width: max-content;\n}\n\n.column-text {\n  font-size: 2rem;\n  text-align: left;\n  list-style-type: none;\n}\n\n.column-text li {\n  //line-height: 2rem;\n  transition: opacity 0.3s ease;\n}\n\n.space {\n  margin-left: 0.5rem; /* Space between text elements */\n}\n  \n//TOGGLE THEME\n.toggle-container {\n    position: relative;\n    //font-size: 2rem;\n    //font-weight: bold;\n    user-select: none;\n    overflow: hidden;\n    height: 3rem;\n    width: 150px;\n    //text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.toggle-text {\n    position: absolute;\n    width: 100%;\n    //text-align: center;\n    transition: transform $slow-transition, opacity $slow-transition;\n}\n\n.toggle-text.light {\n    transform: translateY(-100%); //Swipe up\n    opacity: 0; //Fade out\n}\n\n.toggle-text.dark {\n    transform: translateY(100%); //Swipe down\n    opacity: 0; //Fade in\n}\n\n[theme=\"light\"] .toggle-text.light {\n    transform: translateY(0);\n    opacity: 1;\n}\n\n[theme=\"dark\"] .toggle-text.dark {\n    transform: translateY(0);\n    opacity: 1;\n}\n\n","@use \"./partials\" as *;\n\n#nav-block {\n    grid-area: nav;\n    //-color: red;\n}\n\n#logo-block {\n    grid-area: logo;\n    height: $header-height;\n    align-items: center;\n    //background-color: blue;\n}\n\n#left-bar {\n    grid-area: left-bar;\n    //background-color: yellow;\n}\n\n#right-bar {\n    grid-area: right-bar;\n    //background-color: green;\n}\n\n#intro {\n    grid-area: intro;\n    //background-color: orange;\n}\n\n#case-list {\n    grid-area: case-list;\n    //background-color: pink;\n}\n\n#home {\n    display: grid;\n    grid-template-columns: $bar-width 1fr $bar-width;\n    grid-template-areas:\n        \"nav . logo\"\n        \"nav intro .\"\n        \"nav case-list right-bar\"\n    ;\n    padding: 0; \n    margin: 0;\n}\n\n/*\n@media (min-width: $breakpoint) {\n    body{\n\n    }\n}\n*/\n\n\n\n// Media Variables & Mixins\n\n/* EXAMPLE USE\n$breakpoints: (\n  phone-sm: 420px,\n  phone: 767px,\n  tablet: 768px,\n  tablet-lg: 1024px,\n  desktop: 1025px,\n  desktop-lg: 1600px\n  );\n\n@mixin for-size($breakpoint, $direction:down) {\n\n// If the breakpoint exists in the map.\n@if map-has-key($breakpoints, $breakpoint) {\n\n// Get the breakpoint value.\n$breakpoint-value: map-get($breakpoints, $breakpoint);\n\n// Determine the direction and then write the media query.\n@if $direction == up {\n  @media (min-width: $breakpoint-value) {\n    @content;\n  }\n}\n@else if $direction == down {\n  @media (max-width: $breakpoint-value) {\n    @content;\n     }\n  }\n}\n// If the breakpoint doesn't exist in the map, pass a manual breakpoint\n@else {\n  @if $direction == up {\n    @media (min-width: $breakpoint) {\n      @content;\n    }\n  }\n  @else if $direction == down {\n    @media (max-width: $breakpoint) {\n      @content;\n      }\n    }\n  }\n}\n\n\n.my-element {\n  @include for-size(1365px,up) {\n    padding-right:0;\n  }\n}\n*/\n\n/* COLOR */\n/*\n:root {\n    background-color: $primary-color;\n}\n*/\n\n/*\n@include color-mode($themes) {\n    * {\n        color: themed(\"text\");\n        background-color: themed(\"background\");\n    }\n}\n*/"]}