{"version":3,"sources":["../scss/partials/_reset.scss","../scss/partials/_variables.scss","../scss/partials/_color.scss","../scss/partials/_type.scss","../scss/partials/_layout.scss","../scss/screen.scss"],"names":[],"mappings":"AAAQ,8DAAA,CCwCR,MACI,wBAAA,CACA,kBAAA,CACA,qBAAA,CACA,oBAAA,CACA,oBAAA,CACA,0CAAA,CAGJ,aACI,wBAAA,CACA,kBAAA,CACA,qBAAA,CACA,sBAAA,CACA,mBAAA,CDlDJ,MACE,eAAA,CACA,eAAA,CAGF,8BACE,QAAA,CAGF,4BACE,eAAA,CACA,gBAAA,CAGF,eACE,iBAAA,CACA,mBAAA,CAGF,IACE,aAAA,CACA,oBAAA,CEvBF,KACI,wCAAA,CACA,uBAAA,CACA,mDAAA,CAGJ,EACI,uBAAA,CACA,yBAAA,CAGJ,QACI,uBAAA,CAGJ,UACI,uBAAA,CACA,yBAAA,CAGJ,iBACI,6BAAA,CACA,kCAAA,CAFJ,YACI,6BAAA,CACA,kCAAA,CCfJ,GFqBI,+CArBW,CAsBX,cAAA,CAIA,gEAAA,CACA,2CAAA,CEvBJ,eFiBI,+CArBW,CAsBX,eAAA,CAIA,gEAAA,CACA,2CAAA,CEnBJ,EFaI,+CArBW,CAsBX,cAAA,CAIA,gEAAA,CACA,2CAAA,CEZJ,MACI,eAAA,CAGJ,OACI,gBAAA,CAGJ,UFFI,+CArBW,CAsBX,cAAA,CAIA,sEAAA,CACA,2CAAA,CEFA,oBAAA,CACA,4BFjBa,CEkBb,2CAAA,CAGJ,gBFTI,+CArBW,CAsBX,cAAA,CAIA,sEAAA,CACA,2CAAA,CEOJ,aFbI,+CArBW,CAsBX,cAAA,CAIA,gEAAA,CACA,2CAAA,CESA,6BAAA,CAIJ,aFnBI,+CArBW,CAsBX,cAAA,CAIA,gEAAA,CACA,2CAAA,CEmBJ,gBAEI,2BAAA,CAIJ,MACI,wBAAA,CC3DJ,QACI,WAAA,CAaJ,QATI,cAAA,CACA,kCAAA,CACA,mCAAA,CACA,iBAAA,CACA,+BAAA,CACA,mBAAA,CACA,+BAAA,CAKA,qBAAA,CACA,yBAAA,CACA,YAAA,CAGJ,WAhBI,cAAA,CACA,kCAAA,CACA,mCAAA,CACA,iBAAA,CACA,+BAAA,CACA,mBAAA,CACA,+BAAA,CAYA,wBAAA,CACA,gCAAA,CACA,YAAA,CAIJ,mBACE,YAAA,CACA,oBAAA,CACA,eAAA,CACA,WHpBU,CGqBV,sBAAA,CAAA,iBAAA,CAGF,QACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,0BAAA,CAEA,QAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CACA,0BAAA,CACA,eAAA,CAIF,OACE,iBAAA,CAOF,kBACI,iBAAA,CAGA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CACA,eAAA,CACA,WAAA,CACA,WAAA,CAEA,YAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,aACI,iBAAA,CACA,UAAA,CAEA,8CAAA,CAGJ,mBAEI,SAAA,CAGJ,kBAEI,SAAA,CAGJ,iCAEI,SAAA,CAGJ,+BAEI,SAAA,CCnGJ,WACI,aAAA,CAIJ,YACI,cAAA,CACA,YJYY,CIXZ,kBAAA,CAIJ,UACI,kBAAA,CAIJ,WACI,mBAAA,CAIJ,OACI,eAAA,CAIJ,WACI,mBAAA,CAIJ,MACI,YAAA,CACA,2EAAA,CACA,4EACI,CAIJ,SAAA,CACA,QAAA","file":"screen-min.css","sourcesContent":["@import '../node_modules/modern-normalize/modern-normalize.css';\n// https://github.com/sindresorhus/modern-normalize\n// https://mattbrictson.com/blog/css-normalize-and-reset\n\n:root {\n  line-height: 1.5;\n  font-size: 62.5%; //scale default root font size to 10px\n}\n\nh1, h2, h3, h4, h5, figure, p, ol, ul {\n  margin: 0;\n}\n\nol[role=\"list\"], ul[role=\"list\"] {\n  list-style: none;\n  padding-inline: 0;\n}\n\nh1, h2, h3, h4, h5 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nimg {\n  display: block;\n  max-inline-size: 100%;\n}","// Colors\n$primary-color: #000;\n$secondary_color: #fff;\n$light-accent-color: #f1f227;\n$dark-accent-color: #5d24f5;\n$light-blend-mode: multiply;\n$dark-blend-mode: screen;\n\n// Typography\n$primary-font: cofo-sans-variable, Arial, sans-serif;\n$secondary-font: cofo-sans-mono-variable, Arial, sans-serif;\n$base-font-size: 2rem;\n$base-font-weight: 350;\n$scale-factor: 1.5;\n\n// Layout\n$small-pad: 10px;\n$large-pad: 30px;\n$responsive-pad: clamp(10px, 1em, 30px);\n$bar-width: clamp(240px, 22rem, 360px);\n\n$header-height: 12rem;\n$breakpoint: min(640px, 64rem); //max?\n\n// Transitions\n$fast-transition: 0.2s ease;\n$slow-transition: 0.4s ease;\n\n//Mixins\n@mixin font($scale, $type: none) { // 'link', 'hover'\n    font-family: $primary-font;\n    font-size: calc($base-font-size + ((1 - $scale) * ($base-font-size * $scale-factor)));\n    $weight: calc($base-font-weight - ((1 - $scale) * ($base-font-weight / $scale-factor * 0.75)) + var(--weight-correct));\n    @if $type == 'link' {$weight: calc($weight + 100);}\n    @else if $type == 'hover' {$weight: calc($weight + 250);}\n    font-variation-settings: \"wght\" $weight;\n    transition: font-variation-settings $fast-transition;\n}\n\n//CSS Variables (for JS)\n:root {\n    --background-color: #{$secondary_color};\n    --text-color: #{$primary_color};\n    --link-color: #{$dark-accent-color};\n    --blend-mode: #{$dark-blend-mode};\n    --weight-correct: 50;\n    --radius: #{calc($responsive-pad * 2)};\n}\n\n[theme=\"dark\"] {\n    --background-color: #{$primary_color};\n    --text-color: #{$secondary-color};\n    --link-color: #{$light-accent-color};\n    --blend-mode: #{$light-blend-mode};\n    --weight-correct: 0;\n}","@use \"_variables\" as *;\n  \nbody { // Baseline text & background color\n    background-color: var(--background-color);\n    color: var(--text-color);\n    transition: background-color $slow-transition, color $slow-transition;\n}\n\na {\n    color: var(--link-color);\n    transition: color $slow-transition;\n}\n\na:hover {\n    color: var(--text-color);\n}\n\n.main-nav {\n    color: var(--text-color);\n    transition: color $slow-transition;\n}\n\n::selection { \n    color: var(--background-color);\n    background-color: var(--link-color);\n}","@use \"_variables\" as *;\n\n/*\n@mixin base-type {\n    font-family: $primary-font;\n    font-size: $base-font-size;\n}\n*/\n\nh1 {\n    @include font(1);\n}\n\nh2, h3, h4, h5, h6 {\n    @include font(2);\n}\n\np {\n    //@include base-type;\n    //font-variation-settings: \"wght\" $base-font-weight;\n    @include font(1);\n    //transition: font-variation-settings $fast-transition;\n}\n\n.left {\n    text-align: left;\n}\n\n.right {\n    text-align: right;\n}\n\n.main-nav {\n    @include font(1, 'link');\n    text-decoration: none;\n    padding: $responsive-pad;\n    transition: font-variation-settings $fast-transition;\n}\n\n.main-nav:hover {\n    @include font(1, 'hover');\n}\n\n.scroll-text {\n    @include font(1);\n    transition: transform 0.3s ease;\n    //width: max-content;\n}\n  \n.column-text {\n    @include font(1);\n    //text-align: left;\n    //list-style-type: none;\n}\n  \n.column-text li {\n    //line-height: 2rem;\n    transition: opacity 0.3s ease;\n}\n\n\n#logo {\n    text-transform: uppercase;\n}","@use \"_variables\" as *;\n\n/* CURSOR */\n:root * {\n    cursor: none; //Hide default cursor\n}\n\n@mixin base-cursor {\n    position: fixed; // Follow cursor\n    width: calc($responsive-pad * 2); //0; // Inititalize at 0;\n    height: calc($responsive-pad * 2); //0; // Inititalize at 0;\n    border-radius: 50%;\n    transform: translate(-50%, -50%); // Center the circle\n    pointer-events: none;\n    transition: width 0.2s, height 0.2s;\n}\n\n#cursor {\n    @include base-cursor;\n    background-color: #fff;\n    mix-blend-mode: difference; // Invert content beneath\n    z-index: 9998; // Ensure it stays above all other content\n}\n\n#cursor-bg {\n    @include base-cursor;\n    background-color: (0,0,0,0); // Initialize as transparent\n    mix-blend-mode: var(--blend-mode); // Blend mode for tint\n    z-index: 9999; // Layered above the main cursor for tint\n}\n\n//INTRO\n.animate-container {\n  display: flex;\n  align-items: baseline; /* Align to baseline */\n  text-align: left;\n  margin: $small-pad;\n  width: max-content;\n}\n\n.column {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  //gap: 1rem;\n  margin: 0;\n  height: auto;//100vh;\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  overflow: hidden;\n  //width: max-content;\n}\n\n.space {\n  margin-left: 0.5rem; /* Space between text elements */\n}\n  \n//TOGGLE THEME\n\n//********************REMOVE SLIDE ANIMATION!************************************\n\n.toggle-container {\n    position: relative;\n    //font-size: 2rem;\n    //font-weight: bold;\n    user-select: none;\n    overflow: hidden;\n    height: 3rem;\n    width: 150px;\n    //text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.toggle-text {\n    position: absolute;\n    width: 100%;\n    //text-align: center;\n    transition: transform $slow-transition, opacity $slow-transition;\n}\n\n.toggle-text.light {\n    //transform: translateY(-100%); //Swipe up\n    opacity: 0; //Fade out\n}\n\n.toggle-text.dark {\n    //transform: translateY(100%); //Swipe down\n    opacity: 0; //Fade in\n}\n\n[theme=\"light\"] .toggle-text.light {\n    //transform: translateY(0);\n    opacity: 1;\n}\n\n[theme=\"dark\"] .toggle-text.dark {\n    //transform: translateY(0);\n    opacity: 1;\n}\n\n","@use \"./partials\" as *;\n\n#nav-block {\n    grid-area: nav;\n    //-color: red;\n}\n\n#logo-block {\n    grid-area: logo;\n    height: $header-height;\n    align-items: center;\n    //background-color: blue;\n}\n\n#left-bar {\n    grid-area: left-bar;\n    //background-color: yellow;\n}\n\n#right-bar {\n    grid-area: right-bar;\n    //background-color: green;\n}\n\n#intro {\n    grid-area: intro;\n    //background-color: orange;\n}\n\n#case-list {\n    grid-area: case-list;\n    //background-color: pink;\n}\n\n#home {\n    display: grid;\n    grid-template-columns: $bar-width 1fr $bar-width;\n    grid-template-areas:\n        \"nav . logo\"\n        \"nav intro intro\"\n        \"nav case-list right-bar\"\n    ;\n    padding: 0; \n    margin: 0;\n}\n\n/*\n@media (min-width: $breakpoint) {\n    body{\n\n    }\n}\n*/\n\n\n\n// Media Variables & Mixins\n\n/* EXAMPLE USE\n$breakpoints: (\n  phone-sm: 420px,\n  phone: 767px,\n  tablet: 768px,\n  tablet-lg: 1024px,\n  desktop: 1025px,\n  desktop-lg: 1600px\n  );\n\n@mixin for-size($breakpoint, $direction:down) {\n\n// If the breakpoint exists in the map.\n@if map-has-key($breakpoints, $breakpoint) {\n\n// Get the breakpoint value.\n$breakpoint-value: map-get($breakpoints, $breakpoint);\n\n// Determine the direction and then write the media query.\n@if $direction == up {\n  @media (min-width: $breakpoint-value) {\n    @content;\n  }\n}\n@else if $direction == down {\n  @media (max-width: $breakpoint-value) {\n    @content;\n     }\n  }\n}\n// If the breakpoint doesn't exist in the map, pass a manual breakpoint\n@else {\n  @if $direction == up {\n    @media (min-width: $breakpoint) {\n      @content;\n    }\n  }\n  @else if $direction == down {\n    @media (max-width: $breakpoint) {\n      @content;\n      }\n    }\n  }\n}\n\n\n.my-element {\n  @include for-size(1365px,up) {\n    padding-right:0;\n  }\n}\n*/\n\n/* COLOR */\n/*\n:root {\n    background-color: $primary-color;\n}\n*/\n\n/*\n@include color-mode($themes) {\n    * {\n        color: themed(\"text\");\n        background-color: themed(\"background\");\n    }\n}\n*/"]}