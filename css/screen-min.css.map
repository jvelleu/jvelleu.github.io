{"version":3,"sources":["../scss/partials/_reset.scss","../scss/partials/_color.scss","../scss/partials/_type.scss","../scss/partials/_variables.scss","../scss/screen.scss"],"names":[],"mappings":"AAAQ,iEAAA,CAIR,MACE,eAAA,CACA,eAAA,CAGF,8BACE,QAAA,CAGF,4BACE,eAAA,CACA,gBAAA,CAGF,eACE,iBAAA,CACA,mBAAA,CAGF,IACE,aAAA,CACA,oBAAA,CCvBF,MACI,wBAAA,CACA,kBAAA,CACA,qBAAA,CACA,oBAAA,CAGJ,aACI,wBAAA,CACA,kBAAA,CACA,qBAAA,CACA,sBAAA,CAGJ,KACI,wCAAA,CACA,+BAAA,CAGJ,OACI,uBAAA,CACA,oBAAA,CAGJ,IACI,uBAAA,CAKJ,kBACI,iBAAA,CACA,cAAA,CACA,gBAAA,CAEA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CACA,eAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,aACI,iBAAA,CACA,UAAA,CACA,iBAAA,CACA,8CAAA,CAGJ,mBAEI,2BAAA,CACA,SAAA,CAGJ,kBAEI,0BAAA,CACA,SAAA,CAGJ,iCACI,uBAAA,CACA,SAAA,CAGJ,+BACI,uBAAA,CACA,SAAA,CAIJ,iBACI,6BAAA,CACA,kCAAA,CAFJ,YACI,6BAAA,CACA,kCAAA,CCxEJ,GAJI,yCCMW,CDLX,cCOa,CDFb,kCAAA,CACA,oBAAA,CAGJ,eACI,yCCLW,CDMX,cAAA,CACA,6CAAA,CAGJ,EAhBI,yCCMW,CDLX,cCOa,CDUb,kCAAA,CAGJ,EArBI,yCCMW,CDLX,cCOa,CDeb,kCAAA,CACA,oBAAA,CAOJ,MACI,wBAAA,CACA,oBAAA,CEjCJ,UACI,YAAA,CAGJ,MACI,eAAA,CAGJ,OACI,gBAAA,CAGJ,WACI,aAAA,CAIJ,YACI,cAAA,CACA,YDLY,CCMZ,kBAAA,CAIJ,UACI,kBAAA,CAIJ,WACI,mBAAA,CAIJ,OACI,eAAA,CAIJ,WACI,mBAAA,CAIJ,MACI,YAAA,CACA,2EAAA,CACA,wEACI,CAIJ,SAAA,CACA,QAAA,CAYJ,QACI,WAAA,CAGJ,QACI,cAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,qBAAA,CACA,yBAAA,CACA,mBAAA,CACA,+BAAA,CACA,+BAAA,CACA,YAAA,CAGJ,WACI,cAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,wBAAA,CACA,gCAAA,CACA,mBAAA,CACA,oDAAA,CACA,+BAAA,CACA,YAAA","file":"screen-min.css","sourcesContent":["@import '../../node_modules/modern-normalize/modern-normalize.css';\n// https://github.com/sindresorhus/modern-normalize\n// https://mattbrictson.com/blog/css-normalize-and-reset\n\n:root {\n  line-height: 1.5;\n  font-size: 62.5%; //scale default root font size to 10px\n}\n\nh1, h2, h3, h4, h5, figure, p, ol, ul {\n  margin: 0;\n}\n\nol[role=\"list\"], ul[role=\"list\"] {\n  list-style: none;\n  padding-inline: 0;\n}\n\nh1, h2, h3, h4, h5 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nimg {\n  display: block;\n  max-inline-size: 100%;\n}","@use \"_variables\" as *;\n\n:root {\n    --background-color: #{$secondary_color};\n    --text-color: #{$primary_color};\n    --link-color: #{$dark-accent-color};\n    --blend-mode: #{$dark-blend-mode};\n}\n  \n[theme=\"dark\"] {\n    --background-color: #{$primary_color};\n    --text-color: #{$secondary-color};\n    --link-color: #{$light-accent-color};\n    --blend-mode: #{$light-blend-mode};\n}\n  \nbody {\n    background-color: var(--background-color);\n    transition: background-color 0.3s;\n}\n\nbody * {\n    color: var(--text-color);\n    transition: color 0.3s;\n}\n\np a {\n    color: var(--text-color);\n}\n  \n\n//TOGGLE THEME\n.toggle-container {\n    position: relative;\n    font-size: 2rem;\n    font-weight: bold;\n    //cursor: pointer;\n    user-select: none;\n    overflow: hidden;\n    height: 3rem;\n    width: 150px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.toggle-text {\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    transition: transform 0.4s ease, opacity 0.4s ease;\n}\n\n.toggle-text.light {\n    //color: var(--text-color);\n    transform: translateY(-100%); //Swipe up\n    opacity: 0; //Fade out\n}\n\n.toggle-text.dark {\n    //color: var(--text-color);\n    transform: translateY(100%); //Swipe down\n    opacity: 0; //Fade in\n}\n\n[theme=\"light\"] .toggle-text.light {\n    transform: translateY(0);\n    opacity: 1;\n}\n\n[theme=\"dark\"] .toggle-text.dark {\n    transform: translateY(0);\n    opacity: 1;\n}\n\n\n::selection { \n    color: var(--background-color);\n    background-color: var(--link-color); \n}","@use \"_variables\" as *;\n\n@mixin base-type {\n    font-family: $primary-font;\n    font-size: $base-font-size;\n}\n\nh1 {\n    @include base-type;\n    font-variation-settings: \"wght\" calc($base-font-weight + 100);\n    text-decoration: none;\n}\n\nh2, h3, h4, h5, h6 {\n    font-family: $primary-font;\n    font-size: calc($base-font-size * $scale-factor);\n    font-variation-settings: \"wght\" calc($base-font-weight / $scale-factor);\n}\n\np {\n    @include base-type;\n    font-variation-settings: \"wght\" $base-font-weight;\n}\n\na {\n    @include base-type;\n    font-variation-settings: \"wght\" calc($base-font-weight + 100);\n    text-decoration: none;\n}\n\n.intro {\n\n}\n\n#logo {\n    text-transform: uppercase;\n    text-decoration: none;\n}","// Colors\n$primary-color: #000;\n$secondary_color: #fff;\n$light-accent-color: #f1f227;\n$dark-accent-color: #5d24f5;\n$light-blend-mode: multiply;\n$dark-blend-mode: screen;\n\n// Typography\n$primary-font: cofo-sans-variable, sans-serif;\n$secondary-font: cofo-sans-mono-variable, sans-serif;\n$base-font-size: 2rem;\n$base-font-weight: 350;\n$scale-factor: 1.5;\n\n// Layout\n$bar-width: clamp(240px, 22rem, 360px);\n$header-height: 12rem;\n$breakpoint: min(640px, 64rem); //max?","@use \"./partials\" as *;\n\n/* LAYOUT */\n.main-nav {\n    padding: 10px;\n}\n\n.left {\n    text-align: left;\n}\n\n.right {\n    text-align: right;\n}\n\n#nav-block {\n    grid-area: nav;\n    //-color: red;\n}\n\n#logo-block {\n    grid-area: logo;\n    height: $header-height;\n    align-items: center;\n    //background-color: blue;\n}\n\n#left-bar {\n    grid-area: left-bar;\n    //background-color: yellow;\n}\n\n#right-bar {\n    grid-area: right-bar;\n    //background-color: green;\n}\n\n#intro {\n    grid-area: intro;\n    //background-color: orange;\n}\n\n#case-list {\n    grid-area: case-list;\n    //background-color: pink;\n}\n\n#home {\n    display: grid;\n    grid-template-columns: $bar-width 1fr $bar-width;\n    grid-template-areas:\n        \"nav . logo\"\n        \"nav intro .\"\n        \"nav case-list right-bar\"\n    ;\n    padding: 0; \n    margin: 0;\n}\n\n/*\n@media (min-width: $breakpoint) {\n    body{\n\n    }\n}\n*/\n\n/* CURSOR */\n:root * {\n    cursor: none; //Hide default cursor\n}\n\n#cursor {\n    position: fixed; //Follow cursor\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #fff;\n    mix-blend-mode: difference; //Invert content beneath\n    pointer-events: none;\n    transition: width 0.2s, height 0.2s;\n    transform: translate(-50%, -50%); //Center the circle\n    z-index: 9998; //Ensure it stays above all other content\n}\n\n#cursor-bg {\n    position: fixed; //Follow cursor\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: (0,0,0,0); //Initialize as transparent\n    mix-blend-mode: var(--blend-mode); //Blend mode for tint\n    pointer-events: none;\n    transition: width 0.2s, height 0.2s, background-color 0.2s;\n    transform: translate(-50%, -50%); //Center the circle\n    z-index: 9999; //Layered above the main cursor for tint\n}\n\n// Media Variables & Mixins\n\n/* EXAMPLE USE\n$breakpoints: (\n  phone-sm: 420px,\n  phone: 767px,\n  tablet: 768px,\n  tablet-lg: 1024px,\n  desktop: 1025px,\n  desktop-lg: 1600px\n  );\n\n@mixin for-size($breakpoint, $direction:down) {\n\n// If the breakpoint exists in the map.\n@if map-has-key($breakpoints, $breakpoint) {\n\n// Get the breakpoint value.\n$breakpoint-value: map-get($breakpoints, $breakpoint);\n\n// Determine the direction and then write the media query.\n@if $direction == up {\n  @media (min-width: $breakpoint-value) {\n    @content;\n  }\n}\n@else if $direction == down {\n  @media (max-width: $breakpoint-value) {\n    @content;\n     }\n  }\n}\n// If the breakpoint doesn't exist in the map, pass a manual breakpoint\n@else {\n  @if $direction == up {\n    @media (min-width: $breakpoint) {\n      @content;\n    }\n  }\n  @else if $direction == down {\n    @media (max-width: $breakpoint) {\n      @content;\n      }\n    }\n  }\n}\n\n\n.my-element {\n  @include for-size(1365px,up) {\n    padding-right:0;\n  }\n}\n*/\n\n/* COLOR */\n/*\n:root {\n    background-color: $primary-color;\n}\n*/\n\n/*\n@include color-mode($themes) {\n    * {\n        color: themed(\"text\");\n        background-color: themed(\"background\");\n    }\n}\n*/"]}